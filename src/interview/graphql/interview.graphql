scalar Date

type Interview {
    id: Int!
    candidateId: Int!
    employeeId: Int!
    applicationId: Int!
    startDate: Date
    endDate: Date
    feedback: JSON
    round: Int!
    status: String!
    next: Int
    prev: Int
}
type InterviewSlot{
    slotId: Int!
    userId: Int!
    status: String!
    rejectionReason:String
   
}
input CreateInterviewInput {
    candidateId: Int!
    employeeId: Int!
    applicationId: Int!
    startDate: Date
    endDate: Date
    round: Int!
    status: String!
    prev: Int
}
input CreateInterviewSlotInput{
    slotId: Int!
    userId: Int!
    status: String!
    rejectionReason:String
   
}
input UpdateInterviewSlotInput{
    slotId: Int!
    userId: Int!
    status: String
    rejectionReason:String

   
}

input getUniqueInterviewSlotInput{
    slotId: Int!
    userId: Int!

   
}

input UpdateInterviewInput {
    startDate: Date
    endDate: Date
    status: String
}

type Query {
    getAllInterviews: [Interview]
    getInterview(id: Int!): Interview
    getAllInterviewSlots: [InterviewSlot]
    getInterviewSlot(input:getUniqueInterviewSlotInput): InterviewSlot

}

type Mutation {
    createInterview(input: CreateInterviewInput!): Interview
    updateInterview(id: Int!, input: UpdateInterviewInput!): Interview
    deleteInterview(id: Int!): Interview
    createInterviewSlot(input: CreateInterviewSlotInput!): InterviewSlot
    updateInterviewSlot(input: UpdateInterviewSlotInput!): InterviewSlot
    deleteInterviewSlot(input:getUniqueInterviewSlotInput): InterviewSlot
}